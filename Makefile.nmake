## Makefile for building xshark.exe with Microsoft C and nmake
## Use: $(MAKE) /$(MAKEFLAGS) -f makefile.nmake
#
# $Id$

include C:/wireshark-1.4.0/config.nmake
include <win32.mak>

############### no need to modify below this line #########

CC = cl
LINK= link

WIRESHARK_SRC_DIR = C:/wireshark-1.4.0
xshark_SOURCES = xshark.c xdb.c xodbc.c xprint.c

LDFLAGS = /NOLOGO /INCREMENTAL:no $(LOCAL_LDFLAGS)

# We use GENERATED_CFLAGS to get around flex's non-LLP64-compliant output
GENERATED_CFLAGS=-DHAVE_CONFIG_H $(LOCAL_CFLAGS) $(GLIB_CFLAGS) /I. /Iwiretap \
	$(ZLIB_CFLAGS) /I$(PCAP_DIR)\include $(AIRPCAP_CFLAGS) \
	$(C_ARES_CFLAGS) $(ADNS_CFLAGS) $(PCRE_CFLAGS) $(GNUTLS_CFLAGS) \
	$(PYTHON_CFLAGS) $(SMI_CFLAGS) $(GEOIP_CFLAGS) \
	/I$(WIRESHARK_SRC_DIR) \
	-D_U_="" -D_NEED_VAR_IMPORT_
CFLAGS=-WX $(GENERATED_CFLAGS)

CVARSDLL=-DWIN32 -DNULL=0 -D_MT -D_DLL

.c.obj::
	$(CC) $(CVARSDLL) $(CFLAGS) -Fd.\ -c $<

xshark_OBJECTS = $(xshark_SOURCES:.c=.obj)

xshark_LIBS= $(WIRESHARK_SRC_DIR)\wiretap\wiretap-$(WTAP_VERSION).lib \
	wsock32.lib user32.lib odbc32.lib shell32.lib \
	$(GLIB_LIBS) \
	$(GTHREAD_LIBS) \
	$(WIRESHARK_SRC_DIR)\wsutil\libwsutil.lib \
	$(GNUTLS_LIBS) \
	$(PYTHON_LIBS) \
!IFDEF ENABLE_LIBWIRESHARK
	$(WIRESHARK_SRC_DIR)\epan\libwireshark.lib \
!ELSE
	$(WIRESHARK_SRC_DIR)\epan\dissectors\dissectors.lib \
	$(WIRESHARK_SRC_DIR)\epan\wireshark.lib \
	$(WIRESHARK_SRC_DIR)\epan\crypt\airpdcap.lib \
	$(WIRESHARK_SRC_DIR)\epan\dfilter\dfilter.lib \
	$(WIRESHARK_SRC_DIR)\epan\ftypes\ftypes.lib \
	$(C_ARES_LIBS) \
	$(ADNS_LIBS) \
	$(PCRE_LIBS) \
	$(ZLIB_LIBS)
!ENDIF

EXECUTABLES=xshark.exe

all : $(EXECUTABLES)

xshark.exe	: $(xshark_OBJECTS) 
	@echo Linking $@
	$(LINK) @<<
		/OUT:xshark.exe $(conflags) $(conlibsdll) $(LDFLAGS) /LARGEADDRESSAWARE /SUBSYSTEM:console $(xshark_LIBS) $(xshark_OBJECTS)
<<
!IFDEF MANIFEST_INFO_REQUIRED
	mt.exe -nologo -manifest "xshark.exe.manifest" -outputresource:xshark.exe;1
!ENDIF

clean : 
	rm -rf *.obj xshark.exe
